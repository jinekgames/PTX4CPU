name: Build & Test C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-ubuntu-x64:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v4

    - name: Prepare repository
      run: |
        git submodule update --init --recursive
        mkdir build
        ls -l

    - name: Setup dependencies
      uses: aminya/setup-cpp@v0.37.0
      with:
        # The compiler to use and its optional version
        compiler: gcc-13
        architecture: x64
        llvm: # optional
        gcc: 13
        cmake: # optional
        ninja: # optional
        make: # optional
        timeout: # optional, еhe timeout for installation of one tool (in minutes), default is 20

    - name: Prepare build project
      run: cmake -S . -B ./build -DBUILD_TESTS=ON -DUSE_DEBUG_FEATURES=ON -DEXTENDED_VARIABLES_LOGGING=ON -DSYNCHRONIZED_EXECUTION=ON

    - name: Build
      run: cmake --build ./build

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-x64
        path: |
          build/api
          build/bin
          build/tests

  test-ubuntu-x64:

    runs-on: ubuntu-latest

    needs: build-ubuntu-x64

    steps:

    - uses: actions/checkout@v4

    - name: Prepare repository
      run: |
        git submodule update --init --recursive
        mkdir build
        ls -l

    - name: Download binaries
      uses: actions/download-artifact@v4
      with:
        name: ubuntu-x64
        path: ./build

    - name: Run tests
      run: |
        cd ./build/bin
        chmod 777 -R .
        ./autotests

  build-win32-x64:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v4

    - name: Prepare repository
      run: |
        git submodule update --init --recursive
        mkdir build
        dir

    - name: Setup dependencies
      uses: aminya/setup-cpp@v0.37.0
      with:
        # The compiler to use and its optional version
        compiler: msvc
        architecture: x64
        msvc: # optional
        cmake: # optional
        ninja: # optional
        make: # optional
        timeout: # optional, еhe timeout for installation of one tool (in minutes), default is 20

    - name: Prepare build project
      run: cmake -S . -B ./build -DBUILD_TESTS=ON -DUSE_DEBUG_FEATURES=ON

    - name: Build
      run: cmake --build ./build

    - name: Archive artifacts
      uses: actions/upload-artifact@v4
      with:
        name: win32-x64
        path: |
          build/api
          build/bin
          build/tests

  test-win32-x64:

    runs-on: windows-latest

    needs: build-win32-x64

    steps:

    - uses: actions/checkout@v4

    - name: Prepare repository
      run: |
        git submodule update --init --recursive
        mkdir build
        dir

    - name: Download binaries
      uses: actions/download-artifact@v4
      with:
        name: win32-x64
        path: ./build

    - name: Run tests
      run: |
        cd ./build/bin/Debug
        ./autotests.exe
